/**
 * Create splashscreen
 * toast
 * controls
 */
import * as caldro from "../caldrodev.js";

const {Color, Vector2, Vector3, Shape:{Rectangle}} = caldro;

const {max, floor, random} = Math;

const gravity = 9.8;

class Star extends Rectangle {

    constructor(pos, zIndex) {
        super(pos, new Vector2(30, 30).scale(.5));
        let chosen = floor(random() * Star.images.length);
        this.img = Star.images[chosen];
        this.zIndex = zIndex;
        this.velocity = new Vector2(-100, 0).scale(1 / this.zIndex);
    }

    update(ctx, dt) {
        // this.velocity
        let x = this.velocity.x * dt;
        this.pos = this.pos.add({x, y:0});
        ctx.save();
        ctx.globalAlpha = max(0, 20 / (20 + this.zIndex) - 0.2);
        ctx.drawImage(this.img, this.pos.x, this.pos.y, 
            this.size.x, this.size.y);
        ctx.restore();
    }

};

const minMax = (min, max) => Math.random() * (max - min + 1) + min;

const silverSurfer = {
    sprite: null,
    init() {
        this.pos = new Vector2();
        this.velocity = new Vector2();
        this.spriteSize = new Vector2(45, 28);
        this.size = new Vector2(45, 28);
        this.spriteSrc = 0;
    },
    update(ctx, dt) {
        this.velocity.y += gravity;
        // this.pos.y += this.velocity.y * dt;
        ctx.drawImage(this.sprite, this.spriteSrc * this.size.x, 11, this.size.x, this.size.y, 
            this.pos.x, this.pos.y, this.size.x, this.size.y);
        ctx.save();
        ctx.globalAlpha = .2;
        ctx.fillStyle = "red";
        ctx.fillRect(this.pos.x, this.pos.y, this.size.x, this.size.y);
        ctx.restore();
        ctx.drawImage(this.sprite, 0, 200);
    }
};


class SilverSurfer extends caldro.GameArea {

    constructor(w, h) {
        super(document.body, w, h);
        this.clearColor = Color.Black;
        this.css({backgroundColor: Color.Black});

        this.stars = [];

        this.init();
    }

    init() {
        // create stars
        let amount = 50;
        for(let i=0; i < amount; i++) {
            let zIndex = minMax(0, 19);
            let pos = new Vector2(minMax(0, this.width),
                minMax(0, this.height), zIndex);
            let star = new Star(pos, zIndex);
            this.stars.push(star);
        };
        silverSurfer.init();
    }

    update() {
        let ctx = this.context2d;
        let dt = this.getDeltaTime();
        this.stars.forEach((star, i) => {
            // star.update(ctx, dt);
            if(star.pos.x + star.size.x < 0) {
                star.pos.x = this.width + star.size.x;
                star.pos.y = minMax(0, this.height);
                star.zIndex = minMax(0, 19);
            }
        });

        silverSurfer.update(ctx, dt);

    }

};


for(let i = 1; i <= 10; i++) 
    caldro.Preloader.addImages("assets/spark"+i+".png");

caldro.Preloader.addImages("assets/silverSurfer.png");

caldro.Preloader.sync().then(e => {
    init(e);
});



const init = (e) => {
    Object.defineProperty(Star, "images", {
        value: Array.from({length: 10}, (v, i) => {
            return e.getImage(i);
        })
    });
    silverSurfer.sprite = e.getImage("silverSurfer");
    // console.log(Stars.images);
    const game = new SilverSurfer(innerWidth, innerHeight);
    game.init();
    game.mainLoop(caldro.GameArea.Dynamic);

    addEventListener("keydown", e => {
        if(e.key === "ArrowUp") {
            silverSurfer.spriteSrc++;
        }
    });
};